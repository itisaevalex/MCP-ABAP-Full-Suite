import { AdtHTTP } from "../AdtHTTP";
export interface UnitTestStackEntry {
    "adtcore:uri": string;
    "adtcore:type": string;
    "adtcore:name": string;
    "adtcore:description": string;
}
export declare enum UnitTestAlertKind {
    exception = "exception",
    failedAssertion = "failedAssertion",
    warning = "warning"
}
export declare enum UnitTestSeverity {
    critical = "critical",
    fatal = "fatal",
    tolerable = "tolerable",
    tolerant = "tolerant"
}
export interface UnitTestAlert {
    kind: UnitTestAlertKind;
    severity: UnitTestSeverity;
    details: string[];
    stack: UnitTestStackEntry[];
}
export interface UnitTestMethod {
    "adtcore:uri": string;
    "adtcore:type": string;
    "adtcore:name": string;
    executionTime: number;
    uriType: string;
    navigationUri: string;
    unit: string;
    alerts: UnitTestAlert[];
}
export interface UnitTestClass {
    "adtcore:uri": string;
    "adtcore:type": string;
    "adtcore:name": string;
    uriType: string;
    navigationUri: string;
    durationCategory: string;
    riskLevel: string;
    testmethods: UnitTestMethod[];
    alerts: UnitTestAlert[];
}
export declare function runUnitTest(h: AdtHTTP, url: string): Promise<UnitTestClass[]>;
//# sourceMappingURL=unittest.d.ts.map