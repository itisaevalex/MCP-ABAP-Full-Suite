"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteObject = exports.objectRegistrationInfo = void 0;
const AdtException_1 = require("../AdtException");
const utilities_1 = require("../utilities");
function objectRegistrationInfo(h, objectUrl) {
    return __awaiter(this, void 0, void 0, function* () {
        AdtException_1.ValidateObjectUrl(objectUrl);
        const response = yield h.request("/sap/bc/adt/sscr/registration/objects", {
            qs: { uri: objectUrl }
        });
        const raw = utilities_1.fullParse(response.body)["reg:objectRegistrationResponse"];
        return Object.assign({ developer: utilities_1.xmlNodeAttr(raw["reg:developer"]), object: utilities_1.xmlNodeAttr(raw["reg:object"]) }, utilities_1.xmlNodeAttr(raw));
    });
}
exports.objectRegistrationInfo = objectRegistrationInfo;
function deleteObject(h, objectUrl, lockHandle, transport) {
    return __awaiter(this, void 0, void 0, function* () {
        AdtException_1.ValidateObjectUrl(objectUrl);
        AdtException_1.ValidateStateful(h);
        const qs = { lockHandle };
        if (transport)
            qs.corrNr = transport;
        const method = "DELETE";
        // no return value, will throw on failure
        yield h.request(objectUrl, { method, qs });
    });
}
exports.deleteObject = deleteObject;
