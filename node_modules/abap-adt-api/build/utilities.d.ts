import { X2jOptionsOptional } from "fast-xml-parser";
export declare const isObject: (x: any) => x is object;
export declare const isArray: (x: any) => x is any[];
export declare const isString: (x: any) => x is string;
export declare function JSON2AbapXML(original: any, root?: string): string;
export declare function xmlNode(xml: any, ...path: string[]): any;
export declare function xmlFlatArray<T>(xml: any, ...path: string[]): T[];
export declare function xmlArray<T>(xml: any, ...path: string[]): T[];
export declare const xmlRoot: (o: any) => any;
export declare const stripNs: (x: any) => any;
export declare const xmlNodeAttr: (n: any) => any;
export declare const fullParse: (xml: string, options?: X2jOptionsOptional) => any;
export declare function toInt(x?: string): number;
export declare const parseSapDate: (d: string) => number | Date;
export declare const toSapDate: (d: Date) => number;
export declare const parseJsonDate: (d: string) => Date;
export declare const decodeEntity: (s: string) => string, encodeEntity: (s: string) => string;
export declare function btoa(s: string): string;
export declare function parts(whole: any, pattern: RegExp): string[];
export declare const followUrl: (base: string, extra: string) => string;
export declare const boolFromAbap: (x: any) => boolean;
export declare function formatQS(raw: any): string;
export declare const toXmlAttributes: (o: any, prefix: string) => string;
//# sourceMappingURL=utilities.d.ts.map